<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:task="http://www.springframework.org/schema/task"
	xmlns:beans="http://www.springframework.org/schema/beans" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jpa="http://www.springframework.org/schema/data/jpa" xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/batch
		http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/task
		http://www.springframework.org/schema/task/spring-task.xsd
		http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-2.5.xsd
		http://www.springframework.org/schema/data/jpa
		http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd
		http://www.springframework.org/schema/util  http://www.springframework.org/schema/util/spring-util-3.1.xsd">

	<import resource="applicationContext.xml" />
 
	<!-- JobRepository and JobLauncher are configuration/setup classes -->
	<bean id="jobRepository"
		class="org.springframework.batch.core.repository.support.MapJobRepositoryFactoryBean" />

	<bean id="jobLauncher"
		class="org.springframework.batch.core.launch.support.SimpleJobLauncher">
		<property name="jobRepository" ref="jobRepository" />
	</bean>


	<job id="INBOUND_BATCH_1" restartable="true"
		xmlns="http://www.springframework.org/schema/batch">


		<step id="CSV_TO_XML">
			<tasklet transaction-manager="transactionManager">
				<chunk reader="fileReader" writer="xmlWriter" processor="fileToXmlProcessor"
					commit-interval="2">
				</chunk>
			</tasklet>
		</step>
	</job>

	<!-- Step will need a transaction manager -->
    <bean id="transactionManager" class="org.springframework.batch.support.transaction.ResourcelessTransactionManager" />


	<bean id="fileReader" class="org.springframework.batch.item.file.FlatFileItemReader">
		<property name="linesToSkip" value="1"></property>
		<property name="resource" value="classpath:samplecsvfile.txt" />
		<property name="lineMapper">
			<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
				<property name="fieldSetMapper">
					<bean
						class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
						<property name="prototypeBeanName" value="productVo"></property>
					</bean>
				</property>
				<property name="lineTokenizer">
					<bean
						class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
						<property name="names"
							value="productId,productName,productQty,productPrice,currency"></property>
					</bean>
				</property>
			</bean>
		</property>
	</bean>

	<bean id="productVo" class="may.practice.spring.batch.vo.ProductVo"
		scope="prototype">
	</bean>

	<bean id="fileToXmlProcessor" class="may.practice.spring.batch.processor.FileToXmlProcessor"></bean>

	<bean id="xmlWriter" class="org.springframework.batch.item.xml.StaxEventItemWriter	">
		<property name="resource" value="file:sampleOutput/SingaPoreProductList.xml" />

		<property name="rootTagName" value="SINGAPORE_PRODUCTS" />

		<property name="marshaller">

			<bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
				<property name="classesToBeBound">
					<list>
						<value>may.practice.spring.batch.vo.ProductVo</value>
					</list>
				</property>
			</bean>

		</property>
	</bean>


</beans>